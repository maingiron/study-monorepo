{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["stores","version","dbName","connection","close","ConnectionFactory","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","_createStores","e","target","result","onsuccess","bind","onerror","console","log","error","name","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAMA,e,GAAS,CAAC,aAAD,C;AACTC,gB,GAAU,C;AACVC,e,GAAS,Y;AAEXC,mB,GAAa,I;AAEbC,c,GAAQ,I;;sCAGCC,iB;AAEZ,yCAAc;AAAA;;AAEb,qBAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AAEA;;;;+CAEsB;;AAEtB,yBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEvC,yBAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBX,MAAtB,EAA8BD,OAA9B,CAAlB;;AAEAS,iCAAYI,eAAZ,GAA8B,aAAK;;AAElCT,0CAAkBU,aAAlB,CAAgCC,EAAEC,MAAF,CAASC,MAAzC;AAEA,sBAJD;;AAMAR,iCAAYS,SAAZ,GAAwB,aAAK;;AAE5B,4BAAG,CAAChB,UAAJ,EAAgB;;AAEfA,wCAAaa,EAAEC,MAAF,CAASC,MAAtB;;AAEAd,mCAAQD,WAAWC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR;;AAEAA,sCAAWC,KAAX,GAAmB,YAAW;;AAE7B,oCAAM,IAAIE,KAAJ,CAAU,4CAAV,CAAN;AAEA,4BAJD;AAKA;;AAEDE,gCAAQL,UAAR;AAEA,sBAjBD;;AAmBAO,iCAAYW,OAAZ,GAAsB,aAAK;;AAE1BC,gCAAQC,GAAR,CAAYP,EAAEC,MAAF,CAASO,KAArB;;AAEAf,+BAAOO,EAAEC,MAAF,CAASO,KAAT,CAAeC,IAAtB;AAEA,sBAND;AAQA,mBArCM,CAAP;AAuCA;;;6CAEoBtB,U,EAAY;;AAEhCH,yBAAO0B,OAAP,CAAe,iBAAS;;AAEvB,yBAAGvB,WAAWwB,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAH,EACC1B,WAAW2B,iBAAX,CAA6BD,KAA7B;;AAED1B,gCAAW4B,iBAAX,CAA6BF,KAA7B,EAAoC,EAAEG,eAAe,IAAjB,EAApC;AAEA,mBAPD;AASA;;;iDAEwB;;AAExB,sBAAG7B,UAAH,EAAe;;AAEdC;AACAD,kCAAa,IAAb;AAEA;AAED","file":"ConnectionFactory.js","sourcesContent":["const stores = ['negociacoes'];\r\nconst version = 5;\r\nconst dbName = 'aluraframe';\r\n\r\nlet connection = null;\r\n\r\nlet close = null;\r\n\r\n\r\nexport class ConnectionFactory {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthrow new Error('Não é possível criar instâncias de ConnectionFactory');\r\n\r\n\t}\r\n\r\n\tstatic getConnection() {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tlet openRequest = window.indexedDB.open(dbName, version);\r\n\r\n\t\t\topenRequest.onupgradeneeded = e => {\r\n\r\n\t\t\t\tConnectionFactory._createStores(e.target.result);\r\n\r\n\t\t\t};\r\n\r\n\t\t\topenRequest.onsuccess = e => {\r\n\r\n\t\t\t\tif(!connection) {\r\n\r\n\t\t\t\t\tconnection = e.target.result;\r\n\r\n\t\t\t\t\tclose = connection.close.bind(connection);\r\n\r\n\t\t\t\t\tconnection.close = function() {\r\n\r\n\t\t\t\t\t\tthrow new Error('Você não pode fechar diretamente a conexão');\r\n\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresolve(connection);\r\n\r\n\t\t\t};\r\n\r\n\t\t\topenRequest.onerror = e => {\r\n\r\n\t\t\t\tconsole.log(e.target.error);\r\n\r\n\t\t\t\treject(e.target.error.name);\r\n\r\n\t\t\t};\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tstatic _createStores(connection) {\r\n\r\n\t\tstores.forEach(store => {\r\n\r\n\t\t\tif(connection.objectStoreNames.contains(store))\r\n\t\t\t\tconnection.deleteObjectStore(store);\r\n\r\n\t\t\tconnection.createObjectStore(store, { autoIncrement: true });\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tstatic closeConnection() {\r\n\r\n\t\tif(connection) {\r\n\r\n\t\t\tclose();\r\n\t\t\tconnection = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}"]}
{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","map","Date","objeto","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n\r\n\tconstructor() {\r\n\t\t\r\n\t\tthis._http = new HttpService();\r\n\t}\r\n\r\n\tobterNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos.reduce((dados, periodo) => dados.concat(periodo), []);\r\n\r\n            return negociacoes;\r\n\r\n        }).catch(erro => {\r\n\r\n            throw new Error(erro);\r\n            \r\n        });\r\n\r\n    } \r\n\r\n\tobterNegociacoesDaSemana() {\r\n\r\n\t\treturn this._http\r\n\t\t\t.get('negociacoes/semana')\r\n\t\t\t.then(negociacoes => {\r\n\t\t\t\treturn(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n\t\t\t})\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana.');\r\n\t\t\t});\r\n\t\t\r\n\t}\r\n\r\n\tobterNegociacoesDaSemanaAnterior() {\r\n\r\n\t\treturn this._http\r\n\t\t\t.get('negociacoes/anterior')\r\n\t\t\t.then(negociacoes => {\r\n\t\t\t\treturn(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n\t\t\t})\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana anterior.');\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tobterNegociacoesDaSemanaRetrasada() {\r\n\r\n\t\treturn this._http\r\n\t\t\t.get('negociacoes/retrasada')\r\n\t\t\t.then(negociacoes => {\r\n\t\t\t\treturn(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n\t\t\t})\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana retrasada.');\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tcadastra(negociacao) {\r\n\r\n\t\treturn ConnectionFactory\r\n\t\t\t.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.adiciona(negociacao))\r\n\t\t\t.then(() => 'Negociação adicionada com sucesso')\r\n\t\t\t.catch(erro => {\r\n\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível adicionar a negociação');\r\n\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tlista() {\r\n\r\n\t\treturn ConnectionFactory\r\n\t\t\t.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.listaTodos())\r\n\t\t\t.catch(erro => {\r\n\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível obter as negociações');\r\n\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tapaga() {\r\n\r\n\t\treturn ConnectionFactory\r\n\t\t\t.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.apagaTodos())\r\n\t\t\t.then(mensagem => 'Negociações apagadas com sucesso')\r\n\t\t\t.catch(erro => {\r\n\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível apagar as negociações');\r\n\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\timporta(listaAtual) {\r\n\r\n\t\treturn this.obterNegociacoes()\r\n            .then(negociacoes => \r\n            \tnegociacoes.filter(negociacao => \r\n            \t\t!listaAtual.some(negociacaoExistente => \r\n            \t\t\tnegociacao.isEquals(negociacaoExistente)))\r\n            )\r\n            .catch(erro => {\r\n\r\n            \tconsole.log(erro);\r\n            \tthrow new Error('Não foi possível buscar negociações para importar');\r\n\r\n            })\r\n\r\n\t}\r\n\r\n}"]}